var ApplicationConfiguration=function(){"use strict";var applicationModuleName="mean",applicationModuleVendorDependencies=["ngResource","ngAnimate","ngSanitize","ui.router","ui.bootstrap","ui.utils","validation","validationrule","ngAutocomplete","ngLodash","720kb.fx","xeditable","dialogs.main","angular-growl","angularUtils.directives.dirPagination"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();(function(){"use strict";function config($locationProvider,paginationTemplateProvider){$locationProvider.hashPrefix("!"),paginationTemplateProvider.setPath("lib/angular-utils-pagination/dirPagination.tpl.html")}function run(editableOptions,editableThemes){editableThemes.bs3.buttonsClass="btn-sm",editableOptions.theme="bs3"}function ready(){"#_=_"===window.location.hash&&(window.location.hash="#!"),"#"===window.location.href[window.location.href.length-1]&&window.location.href.length-window.location.origin.length===2&&(window.location.href=window.location.origin+"/#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(config).run(run),angular.element(document).ready(ready),config.$inject=["$locationProvider","paginationTemplateProvider"],run.$inject=["editableOptions","editableThemes"]}).call(this),function(){"use strict";ApplicationConfiguration.registerModule("core")}.call(this),function(){"use strict";ApplicationConfiguration.registerModule("events")}.call(this),function(){"use strict";ApplicationConfiguration.registerModule("groups")}.call(this),function(){"use strict";ApplicationConfiguration.registerModule("members")}.call(this),function(){"use strict";ApplicationConfiguration.registerModule("sms")}.call(this),function(){"use strict";ApplicationConfiguration.registerModule("users")}.call(this),function(){"use strict";ApplicationConfiguration.registerModule("validationrule")}.call(this),function(){"use strict";angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}])}.call(this),function(){"use strict";function config(growlProvider){growlProvider.globalPosition("bottom-left"),growlProvider.globalTimeToLive({success:2e3,error:6e3,warning:6e3,info:4e3})}angular.module("core").config(config),config.$inject=["growlProvider"]}.call(this),function(){"use strict";function HeaderController($scope,$state,Authentication,Menus,Search,Users,dialogs,lodash,UserService){function onSelect(group){$state.go("viewGroup.listEvents.viewEvents",{groupId:group._id})}$scope.authentication=Authentication;Authentication.user;$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.title="SportsScheduler",$scope.getGroups=Search.getGroups,$scope.onSelect=onSelect,$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}angular.module("core").controller("HeaderController",HeaderController),HeaderController.$inject=["$scope","$state","Authentication","Menus","Search","Users","dialogs","lodash","UserService"]}.call(this),function(){"use strict";angular.module("core").controller("HomeController",["$scope","Authentication","$animate",function($scope,Authentication,$animate){function addSlides(){var newWidth=600+slides.length+1;slides.push({image:"http://placekitten.com/"+newWidth+"/300",text:["More","Extra","Lots of","Surplus"][slides.length%4]+" "+["Cats","Kittys","Felines","Cutes"][slides.length%4]})}$scope.authentication=Authentication,$animate.enabled(!1);for(var slides=$scope.slides=[],i=0;4>i;i++)addSlides()}])}.call(this),function(){"use strict";function dynFbCommentBox(){function createHTML(attrs){return'<div class="fb-comments" data-href="'+attrs.href+'" data-numposts="'+attrs.numposts+'" data-colorsheme="'+attrs.colorscheme+'" data-width="'+attrs.width+'"></div>'}return{restrict:"A",scope:{},link:function(scope,elem,attrs){attrs.$observe("pageHref",function(newValue){var htmlAttrs={href:newValue,numposts:attrs.numposts||5,colorscheme:attrs.colorscheme||"light",width:attrs.width||"100%"};elem.html(createHTML(htmlAttrs)),FB.XFBML.parse(elem[0])})}}}angular.module("core").directive("dynFbCommentBox",dynFbCommentBox)}.call(this),function(){"use strict";angular.module("core").directive("ngReallyClick",[function(){return{restrict:"A",link:function(scope,element,attrs){element.bind("click",function(){var message=attrs.ngReallyMessage;message&&confirm(message)&&scope.$apply(attrs.ngReallyClick)})}}}])}.call(this),function(){"use strict";function ssDialog(dialogs){function postLink(scope,element,attrs){function clickFn(e){scope.enable&&(e.preventDefault(),launch(scope,attrs))}element.bind("click",clickFn)}function launch(scope,attrs){var config=angular.extend({size:"sm"},scope.config),dlg=dialogs.confirm(attrs.title,attrs.message,config);dlg.result.then(function(btn){scope.ok()},function(btn){scope.cancel&&scope.cancel()})}var dd={scope:{ok:"&dialogOk",cancel:"&dialogCancel",enable:"=dialogEnable",config:"@dialogConfig"},restrict:"A",link:postLink};return dd}angular.module("core").directive("ssDialog",ssDialog),ssDialog.$inject=["dialogs"]}.call(this),function(){"use strict";angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}])}.call(this),function(){"use strict";function PaginationService($http){function Pagination(url){this.url=url||""}return Pagination.prototype={getResultsPage:function(pageNumber,count){return $http.get(this.url+"?page="+pageNumber+"&count="+count).then(function(result){return result.data})}},Pagination}angular.module("groups").factory("PaginationService",PaginationService),PaginationService.$inject=["$http"]}.call(this),function(){"use strict";angular.module("events")}.call(this),function(){"use strict";angular.module("events").config(["$stateProvider",function($stateProvider){$stateProvider.state("listEvents",{url:"/events",templateUrl:"modules/events/views/list-events.client.view.html"}).state("createEvent",{url:"/events/create",templateUrl:"modules/events/views/create-event.client.view.html"}).state("viewEvent",{url:"/events/:eventId",templateUrl:"modules/events/views/view-event.client.view.html"}).state("editEvent",{url:"/events/:eventId/edit",templateUrl:"modules/events/views/edit-event.client.view.html"})}])}.call(this),function(){"use strict";function EventsController($scope,$state,$stateParams,$location,Authentication,Events,growl,lodash,$rootScope,$q,dialogs){function getDate(){$scope.event.date=new Date}function clearDate(){$scope.event.date=null}function disableDate(date,mode){return"day"===mode&&(0===date.getDay()||6===date.getDay())}function toggleMin(){$scope.minDate=$scope.minDate?null:new Date}function openDate($event){$event.preventDefault(),$event.stopPropagation(),$scope.opened=!0}function hasEventExpired(eventTime){var hrsDiff,now=Date.now(),eD=Date.parse(eventTime);return hrsDiff=eD-now,0>hrsDiff?!0:!1}function watchLocation(newVal,oldVal){newVal&&($scope.event.location.lat=newVal.lat(),$scope.event.location.lng=newVal.lng())}function watchVotes(data){$scope.unrespUsers=getUnresponsiveUsers()}function create(){if(!_canCreateEvent())return void _notifyEventMax();(_.isUndefined($scope.event.attndNotifMins)||_.isNaN($scope.event.attndNotifMins)||$scope.event.attndNotifMins<$scope.attndNotifMin||$scope.event.attndNotifMins>$scope.attndNotifMax)&&($scope.event.attndNotifMins=0);var event=new Events($scope.event),params={groupId:$stateParams.groupId};return event.group=$stateParams.groupId,event.$save(params,function(data){$scope.event=event,_refreshData(),$state.go("viewGroup.listEvents.viewEvent",{eventId:$scope.event._id}),_notifySuccess("Event created successfully")}),event.$promise}function remove(){var params={eventId:$stateParams.eventId},event=Events.remove(params,function(){$scope.event=event,_refreshData(),$state.go("viewGroup.listEvents.viewEvents"),_notifySuccess("Event successfully removed")});return event.$promise}function update(){var params={eventId:$stateParams.eventId};$scope.event.group=$stateParams.groupId;var event=Events.update(params,$scope.event,function(data){$scope.event=data,_refreshData(),$state.go("viewGroup.listEvents.viewEvent",{eventId:$scope.event._id})});return event.$promise}function find(){$scope.events=Events.query({groupId:$stateParams.groupId})}function findOne(){var event=Events.get({eventId:$stateParams.eventId},function(){$scope.event=event,$scope.unrespUsers=getUnresponsiveUsers()});return event.$promise}function _notifySuccess(text){text=text||"Event updated successfully",growl.success(text)}function voteYes(){function success(data){_notifySuccess("Voted successfully")}function failure(data){_deleteUserFromYes($scope.user),_addUserToVoteNo($scope.user)}function final(data){$rootScope.$broadcast("voted",data)}_addUserToVoteYes($scope.user),update().then(success,failure)["finally"](final)}function voteNo(){function success(data){_notifySuccess("Voted successfully")}function failure(data){_deleteUserFromNo($scope.user),_addUserToVoteYes($scope.user)}function final(data){$rootScope.$broadcast("voted",data)}_addUserToVoteNo($scope.user),update().then(success,failure)["finally"](final)}function _addUserToVoteYes(user){user=user||$scope.user,_hasUserVotedNo(user)&&_deleteUserFromNo(user),_hasUserVotedYes(user)||$scope.event.attendance.yes.push(user)}function _addUserToVoteNo(user){user=user||$scope.user,_hasUserVotedYes(user)&&_deleteUserFromYes(user),_hasUserVotedNo(user)||$scope.event.attendance.no.push(user)}function _deleteUserFromYes(user){user=user||$scope.user,$scope.event.attendance.yes=_.reject($scope.event.attendance.yes,function(item){return _.isEqual(item._id,user._id)})}function _deleteUserFromNo(user){user=user||$scope.user,$scope.event.attendance.no=_.reject($scope.event.attendance.no,function(item){return _.isEqual(item._id,user._id)})}function hasVotedYes(user){return _hasUserVotedYes(user)}function hasVotedNo(user){return _hasUserVotedNo(user)}function _hasUserVotedYes(user){return user=user||$scope.user,_.isUndefined($scope.event.attendance)?!1:_.include(_.pluck($scope.event.attendance.yes,"_id"),user._id)}function _hasUserVotedNo(user){return user=user||$scope.user,_.isUndefined($scope.event.attendance)?!1:_.include(_.pluck($scope.event.attendance.no,"_id"),user._id)}function rejectList(list,rej,key){return rej.forEach(function(item){list=_(list).reject(function(it){return item[key]===it[key]}).value()}),list}function getUnresponsiveUsers(members){return members=members||$scope.group.members,_(members).rejectList($scope.event.attendance.no,"_id").rejectList($scope.event.attendance.yes,"_id").value()}function canCreateEvent(){return _canCreateEvent()?void $state.go("viewGroup.listEvents.addEvents",{groupId:$stateParams.groupId}):void _notifyEventMax()}function _canCreateEvent(){return _.isUndefined($scope.events)?_.isUndefined($scope.group.events.length)?(growl.warning("Internal error :("),!1):$scope.group.events.length<MAX_EVENTS:$scope.events.length<MAX_EVENTS}function _notifyEventMax(){var header="Add Event",msg="You have reached the maximum number(5) of events allowed. Please delete one to continue.",opts={size:"sm",windowClass:"modal-btn-sm"};dialogs.notify(header,msg,opts)}function _refreshData(){find(),findOneGroup()}function watchEventAttndMins(newVal,oldVal){newVal?$scope.attndNotifError=!1:($scope.attndNotifError=!0,newVal=0),$scope.attndNotifTime=new Date(Date.parse($scope.event.time)-newVal*MS_PER_MINUTE)}function watchEventTime(newVal,oldVal){$scope.attndNotifTime=new Date(Date.parse(newVal)-$scope.event.attndNotifMins*MS_PER_MINUTE)}function getTimeDiff(date,mins){return new Date(Date.parse(date)-mins*MS_PER_MINUTE)}var _=lodash;_.mixin({rejectList:rejectList}),$scope.authentication=Authentication,$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.state=$state,$scope.stateParams=$stateParams;var MS_PER_MINUTE=6e4;$scope.event=$scope.event||{attndNotifMins:30},$scope.create=create,$scope.remove=remove,$scope.update=update,$scope.find=find,$scope.findOne=findOne,$scope.options={country:"us"},$scope.details="",$scope.today=getDate,$scope.today(),$scope.clear=clearDate,$scope.disabled=disableDate,$scope.toggleMin=toggleMin,$scope.toggleMin(),$scope.open=openDate,$scope.dateOptions={formatYear:"yy",startingDay:1},$scope.formats=["dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0];var date=new Date;date.setHours(date.getHours()+1),$scope.event.time=date,$scope.attndTimeMin=0,$scope.attndTimeMax=60,$scope.$watch("details.geometry.location",watchLocation),$scope.$watch("event.attndNotifMins",watchEventAttndMins),$scope.$watch("event.time",watchEventTime),$scope.$on("voted",watchVotes),$scope.hasEventExpired=hasEventExpired,$scope.voteYes=voteYes,$scope.voteNo=voteNo,$scope.hasVotedYes=hasVotedYes,$scope.hasVotedNo=hasVotedNo,$scope.group=$scope.$parent.group;var findOneGroup=$scope.$parent.findOne;$scope.pagination={current:1,totalEvents:0,eventsPerPage:1},$scope.canCreateEvent=canCreateEvent;var MAX_EVENTS=5;$scope.MAX_EVENTS=MAX_EVENTS,$scope.getTimeDiff=getTimeDiff}angular.module("events").controller("EventsController",EventsController),EventsController.$inject=["$scope","$state","$stateParams","$location","Authentication","Events","growl","lodash","$rootScope","$q","dialogs"]}.call(this),function(){"use strict";angular.module("events").factory("Events",["$resource",function($resource){return $resource("/api/users/groups/:groupId/events/:eventId",{groupId:"@group._id",eventId:"@_id"},{update:{method:"PUT"},query:{method:"GET",isArray:!0}})}])}.call(this),function(){"use strict";function Menus(Menus){Menus.addMenuItem("topbar","Groups","groups","dropdown","/groups(/create)?"),Menus.addSubMenuItem("topbar","groups","List Groups","groups"),Menus.addSubMenuItem("topbar","groups","New Group","groups/create")}angular.module("groups").run(Menus),Menus.$inject=["Menus"]}.call(this),function(){"use strict";angular.module("groups").config(["$stateProvider",function($stateProvider){$stateProvider.state("listGroups",{url:"/groups",templateUrl:"modules/groups/views/list-groups.client.view.html"}).state("createGroup",{url:"/groups/create",templateUrl:"modules/groups/views/create-group.client.view.html"}).state("viewGroup",{url:"/groups/:groupId",templateUrl:"modules/groups/views/view-group.client.view.html"}).state("viewGroup.listMembers",{url:"/members",templateUrl:"modules/groups/views/view-members-group.client.view.html"}).state("viewGroup.listMembers.viewMembers",{url:"/list",templateUrl:"modules/groups/views/list-members-group.client.view.html"}).state("viewGroup.listMembers.addMembers",{url:"/add",templateUrl:"modules/groups/views/add-members-group.client.view.html"}).state("viewGroup.listEvents",{url:"/events",templateUrl:"modules/groups/views/view-events-group.client.view.html"}).state("viewGroup.listEvents.viewEvents",{url:"/list",templateUrl:"modules/groups/views/list-events-group.client.view.html"}).state("viewGroup.listEvents.addEvents",{url:"/add",templateUrl:"modules/groups/views/add-events-group.client.view.html"}).state("viewGroup.listEvents.viewEvent",{url:"/:eventId",templateUrl:"modules/groups/views/view-event-group.client.view.html"}).state("viewGroup.listEvents.editEvent",{url:"/:eventId/edit",templateUrl:"modules/groups/views/edit-event-group.client.view.html"})}])}.call(this),function(){"use strict";function GroupsController($scope,$state,$stateParams,$location,Authentication,Groups,Search,lodash,dialogs,$q,growl,Users,UserService){function create(){var group=new Groups($scope.group);return group.$save(function(data){$state.go("viewGroup.listMembers.viewMembers",{groupId:data._id}),_notifySuccess("Group successfully created")})}function remove(){return $scope.group.$remove(function(data){$location.path("groups")})}function update(){return $scope.group.$update()}function find(){$scope.groups=Groups.query()}function findOne(){return $scope.group=Groups.get({groupId:$stateParams.groupId})}function onSelect($model){if(_isUserInTempMembers($model)||_isUserInMembers($model)){var header="Add Members",msg='<span class="text-primary">'+$model.username+"</span> already in the group.",opts={size:"sm",windowClass:"modal-btn-sm"};dialogs.notify(header,msg,opts)}else $scope.tempMembers.push($model)}function removeMember(member){function success(){_notifySuccess("Member "+member.username+" removed")}function failure(){_addMember(member),_addAdmin(member)}if(member.isAdmin){if(!canRemoveAdmin())return _notifyCannotRemoveOwner(),_getPromise(!1,member);_deleteAdminMember(member)}return _deleteMember(member),update().then(success,failure)}function _removeMember(member){function success(){}function failure(){_addMember(member)}return _deleteMember(member),update().then(success,failure)}function removeTempMember(index){$scope.tempMembers.splice(index,1)}function saveMember(){return $scope.group.members=_.union($scope.group.members,$scope.tempMembers),update().then(function(){$state.go("viewGroup.listMembers.viewMembers"),$scope.tempMembers=[],_notifySuccess("Member successfully added")})}function addMember(){var opts={size:"sm"};dialogs.create("/modules/members/views/templ-add-member.client.view.html","MembersController",$scope.group,opts)}function isAdmin(){return _.isUndefined($scope.group.admins)?!1:_isUserInAdmins($scope.authentication.user)}function isOwner(member){return _.isUndefined($scope.group.createdBy)?!1:member._id!==$scope.group.createdBy._id?!1:_isUserInAdmins($scope.group.createdBy)}function isLoggedInOwner(){return _.isUndefined($scope.group.createdBy)?!1:$scope.group.createdBy._id===$scope.authentication.user._id}function makeAdmin(member){function success(){_notifySuccess("Admin successfully added")}function failure(){_.dropRight($scope.group.admins)}return _addAdmin(member)?update().then(success,failure):_getPromise(!1,member)}function removeAdmin(member){function success(){_notifySuccess("Admin successfully removed")}function failure(){_addAdmin(member)}return isOwner(member)?(_notifyCannotRemoveOwner(),_getPromise(!1,member)):(_deleteAdminMember(member),update().then(success,failure))}function canRemoveAdmin(){return _.size($scope.group.admins)>1}function _notifyCannotRemoveOwner(){var header="Remove Owner",msg="Can not remove the owner",opts={size:"sm",windowClass:"modal-btn-sm"};dialogs.notify(header,msg,opts)}function _addAdmin(member){return _isUserInAdmins(member)?!1:($scope.group.admins.push(member),!0)}function _addMember(member){return _isUserInMembers(member)?!1:($scope.group.members.push(member),!0)}function _deleteAdminMember(member){$scope.group.admins=_.reject($scope.group.admins,function(item){return _.isEqual(item._id,member._id)})}function _deleteMember(member){$scope.group.members=_.reject($scope.group.members,function(item){return _.isEqual(item._id,member._id)})}function _isUserInTempMembers(user){return _.include(_.pluck($scope.tempMembers,"_id"),user._id)}function _isUserInAdmins(user){return _.includes(_.pluck($scope.group.admins,"_id"),user._id)}function _isUserInMembers(user){return _.include(_.pluck($scope.group.members,"_id"),user._id)}function _getPromise(isSuccess,data){var deferred=$q.defer();return setTimeout(function(){isSuccess?deferred.resolve(data):deferred.reject(data)},1),deferred.promise}function _notifySuccess(text){text=text||"Group successfully updated",growl.success(text)}function getUser(){var user=Users.get({userId:$scope.user._id},function(){Authentication.user=user,$scope.user=user});return user.$promise}function isMember(){return _isUserInMembers($scope.user)}function joinGroup(){_addMember($scope.user),update().then(function(){$state.go("viewGroup.listMembers.viewMembers"),_notifySuccess("You are now a member")},function(){_removeMember($scope.user)})}function canRevokeAdminRights(member){return member.isAdmin&&!isOwner(member)&&isLoggedInAdmin(member)||member.isAdmin&&isLoggedInOwner()&&!isOwner(member)}function canMakeAdmin(member){return member.isAdmin}function canRemoveMember(member){return!member.isAdmin||!isOwner(member)&&isLoggedInAdmin(member)||isLoggedInOwner()&&!isOwner(member)}function canRmMember(member){return!isOwner(member)&&isLoggedInOwner()}function canRmvMember(member){return!isOwner(member)&&!member.isAdmin&&!isLoggedInOwner()}function _isAdmin(member){return member.isAdmin&&!isOwner(member)}function isLoggedInAdmin(member){return _.isUndefined($scope.authentication.user._id)?!1:member._id===$scope.authentication.user._id}function shareGroup(){var header="Share Group",msg=["<p>Want people to join this group?</p>","<ul>",'<li>Share group name <br><a href="'+$location.absUrl()+'">'+$scope.group.name+"</a></li>","<li>Search for the group</li>","<li>Click Join Group</li>","</ul>"].join(" "),opts={size:"sm",windowClass:"modal-btn-sm"};dialogs.notify(header,msg,opts)}var _=lodash;$scope.authentication=Authentication,$scope.user=$scope.authentication.user,$scope.user||$location.path("/"),$scope.$state=$state,$scope.create=create,$scope.remove=remove,$scope.update=update,$scope.find=find,$scope.findOne=findOne,$scope.tempMembers=[],$scope.getMembers=Search.getUsers,$scope.onSelect=onSelect,$scope.removeMember=removeMember,$scope.removeTempMember=removeTempMember,$scope.saveMember=saveMember,$scope.addMember=addMember,$scope.isAdmin=isAdmin,$scope.isOwner=isOwner,$scope.isLoggedInOwner=isLoggedInOwner,$scope.makeAdmin=makeAdmin,$scope.removeAdmin=removeAdmin,$scope.canRemoveAdmin=canRemoveAdmin,$scope.isMember=isMember,$scope.joinGroup=joinGroup,$scope.absUrl=$location.absUrl(),$scope.getUser=getUser,$scope.canRevokeAdminRights=canRevokeAdminRights,$scope.canMakeAdmin=canMakeAdmin,$scope.canRemoveMember=canRemoveMember,$scope.canRmMember=canRmMember,$scope.canRmvMember=canRmvMember,$scope._isAdmin=_isAdmin,$scope.shareGroup=shareGroup}angular.module("groups").controller("GroupsController",GroupsController),GroupsController.$inject=["$scope","$state","$stateParams","$location","Authentication","Groups","Search","lodash","dialogs","$q","growl","Users","UserService"]}.call(this),function(){"use strict";function GroupEvents($http,$q){function create(groupId,data){var request=$http({method:"post",url:url(groupId),data:data});return request.then(handleSuccess,handleError)}function get(groupId,eventId){var request=$http({method:"get",url:url(groupId,eventId)});return request.then(handleSuccess,handleError)}function update(groupId,eventId,data){var request=$http({method:"put",url:url(groupId,eventId),data:data});return request.then(handleSuccess,handleError)}function remove(groupId,eventId){var request=$http({method:"delete",url:url(groupId,eventId)});return request.then(handleSuccess,handleError)}function handleError(response){return angular.isObject(response.data)&&response.data.message?$q.reject(response.data.message):$q.reject("An unknown error occurred.")}function handleSuccess(response){return response.data}function url(groupId,eventId){function replacer(match){return/\/{2,}/g.test(match)?"/":""}groupId=groupId?groupId:"",eventId=eventId?eventId:"";var api="api/users/groups/"+groupId+"/events/"+eventId,reg=/\/{2,}|\/+$/g;return api.replace(reg,replacer)}var service={create:create,get:get,update:update,remove:remove},url=url;return service}angular.module("groups").factory("GroupEvents",GroupEvents),GroupEvents.$inject=["$http","$q"]}.call(this),function(){"use strict";angular.module("groups").factory("Groups",["$resource",function($resource){return $resource("/api/users/groups/:groupId",{groupId:"@_id"},{update:{method:"PUT"},query:{method:"GET",isArray:!0}})}])}.call(this),function(){"use strict";function MembersController($scope,$state,$stateParams,$location,Authentication,Groups,Search,lodash,$modalInstance,data){function create(){var group=new Groups($scope.group);group.$save(function(response){redirectHome(group._id)})}function remove(){$scope.group.$remove(function(){$location.path("groups")})}function update(){$scope.group.$update(function(response){})}function find(){$scope.groups=Groups.query()}function findOne(){$scope.group=Groups.get({groupId:$stateParams.groupId},function(){angular.copy($scope.group.members,$scope.tempMembers)})}function onSelect($model){var tempMembers=$scope.tempMembers;tempMembers.push($model),$scope.tempMembers=_.uniq(tempMembers,"_id"),$scope.search.members=""}function removeMember(index){$scope.group.members.splice(index,1)}function removeTempMember(index){$scope.tempMembers.splice(index,1)}function saveMember(){angular.copy($scope.tempMembers,$scope.group.members),update()}function redirectHome(id){var _id=id?id:$stateParams.groupId;$location.path("groups/"+_id+"/members/list")}function isAdmin(){var out=_.some($scope.group.admins,{_id:$scope.authentication.user._id});return $scope.$broadcast("isAdmin",out),out}function cancel(){$modalInstance.dismiss("Canceled")}function save(){update(),$modalInstance.close()}var _=lodash;$scope.authentication=Authentication,$scope.$state=$state,$scope.group=data,$scope.create=create,$scope.remove=remove,$scope.update=update,$scope.find=find,$scope.findOne=findOne,$scope.tempMembers=[],$scope.getMembers=Search.getUsers,$scope.onSelect=onSelect,$scope.removeMember=removeMember,$scope.removeTempMember=removeTempMember,$scope.saveMember=saveMember,$scope.isAdmin=isAdmin,$scope.cancel=cancel,$scope.save=save}angular.module("members").controller("MembersController",MembersController),MembersController.$inject=["$scope","$state","$stateParams","$location","Authentication","Groups","Search","lodash","$modalInstance","data"]}.call(this),function(){"use strict";angular.module("sms").config(["$stateProvider",function($stateProvider){$stateProvider.state("sms",{url:"/sms",templateUrl:"modules/sms/views/sms.client.view.html",resolve:{CarrierFactory:"CarrierFactory",carriers:["CarrierFactory",function(CarrierFactory){return CarrierFactory.getCarriers()}]},controller:"SmsController"})}])}.call(this),function(){"use strict";angular.module("sms").controller("SmsController",["$scope","$http","carriers",function($scope,$http,carriers){function getToAddr(){return $scope.smsform.phone+$scope.smsform.carrier.addr}function getText(){return $scope.smsform.msg}function sendText(){var to=getToAddr(),text=getText(),subject="Test subject";$scope.apiData={to:to,text:text,subject:subject},$scope.sentData=$scope.apiData;var promise=$http.post("/api/sms",$scope.apiData);promise.success(function(response){$scope.response=response}),promise.error(function(response){alert("error "+response)})}$scope.carriers=carriers,$scope.smsform={submit:sendText}}])}.call(this),function(){"use strict";angular.module("sms").value("LocalCarriers",[{carrier:"Airfire Mobile",addr:"@sms.airfiremobile.com"},{carrier:"Alltel",addr:"@message.alltel.com"},{carrier:"Alltel (Allied Wireless)",addr:"@sms.alltelwireless.com"},{carrier:"Alaska Communications",addr:"@msg.acsalaska.com"},{carrier:"Ameritech",addr:"@paging.acswireless.com"},{carrier:"Assurance Wireless",addr:"@vmobl.com"},{carrier:"AT&T Wireless",addr:"@txt.att.net"},{carrier:"AT&T Mobility (Cingular)",addr:"@txt.att.net"},{carrier:"AT&T Enterprise Paging",addr:"@page.att.net"},{carrier:"AT&T Global Smart Messaging Suite",addr:"@sms.smartmessagingsuite.com"},{carrier:"BellSouth",addr:"@bellsouth.cl"},{carrier:"Bluegrass Cellular",addr:"@sms.bluecell.com"},{carrier:"Bluesky Communications",addr:"@psms.bluesky.as"},{carrier:"BlueSkyFrog",addr:"@blueskyfrog.com"},{carrier:"Boost Mobile",addr:"@sms.myboostmobile.com"},{carrier:"Cellcom",addr:"@cellcom.quiktxt.com"},{carrier:"Cellular South",addr:"@csouth1.com"},{carrier:"Centennial Wireless",addr:"@cwemail.com"},{carrier:"Chariton Valley Wireless",addr:"@sms.cvalley.net"},{carrier:"Chat Mobility",addr:"@mail.msgsender.com"},{carrier:"Cincinnati Bell",addr:"@gocbw.com"},{carrier:"Cingular (Postpaid)",addr:"@cingular.com"},{carrier:"Cleartalk Wireless",addr:"@sms.cleartalk.us"},{carrier:"Comcast PCS",addr:"@comcastpcs.textmsg.com"},{carrier:"Cricket",addr:"@sms.mycricket.com"},{carrier:"C Spire Wireless",addr:"@cspire1.com"},{carrier:"DTC Wireless",addr:"@sms.advantagecell.net"},{carrier:"Element Mobile",addr:"@sms.elementmobile.net"},{carrier:"Esendex",addr:"@echoemail.net"},{carrier:"General Communications Inc.",addr:"@mobile.gci.net"},{carrier:"Golden State Cellular",addr:"@gscsms.com"},{carrier:"Google Voice",addr:"@txt.voice.google.com"},{carrier:"GreatCall",addr:"@vtext.com"},{carrier:"Helio",addr:"@myhelio.com"},{carrier:"i wireless (T-Mobile)",addr:".iws@iwspcs.net"},{carrier:"i wireless (Sprint PCS)",addr:"@iwirelesshometext.com"},{carrier:"Kajeet",addr:"@mobile.kajeet.net"},{carrier:"LongLines",addr:"@text.longlines.com"},{carrier:"Metro PCS",addr:"@mymetropcs.com"},{carrier:"Nextech",addr:"@sms.nextechwireless.com"},{carrier:"Nextel Direct Connect (Sprint)",
addr:"@messaging.nextel.com"},{carrier:"Page Plus Cellular",addr:"@vtext.com"},{carrier:"Pioneer Cellular",addr:"@zsend.com"},{carrier:"PSC Wireless",addr:"@sms.pscel.com"},{carrier:"Rogers Wireless",addr:"@sms.rogers.com"},{carrier:"Qwest",addr:"@qwestmp.com"},{carrier:"Simple Mobile",addr:"@smtext.com"},{carrier:"Solavei",addr:"@tmomail.net"},{carrier:"South Central Communications",addr:"@rinasms.com"},{carrier:"Southern Link",addr:"@page.southernlinc.com"},{carrier:"Sprint PCS (CDMA)",addr:"@messaging.sprintpcs.com"},{carrier:"Straight Talk",addr:"@vtext.com"},{carrier:"Syringa Wireless",addr:"@rinasms.com"},{carrier:"T-Mobile",addr:"@tmomail.net"},{carrier:"Teleflip",addr:"@teleflip.com"},{carrier:"Ting",addr:"@message.ting.com"},{carrier:"Tracfone",addr:"@mmst5.tracfone.com"},{carrier:"Telus Mobility",addr:"@msg.telus.com"},{carrier:"Unicel",addr:"@utext.com"},{carrier:"US Cellular",addr:"@email.uscc.net"},{carrier:"USA Mobility",addr:"@usamobility.net"},{carrier:"Verizon Wireless",addr:"@vtext.com"},{carrier:"Viaero",addr:"@viaerosms.com"},{carrier:"Virgin Mobile",addr:"@vmobl.com"},{carrier:"Voyager Mobile",addr:"@text.voyagermobile.com"},{carrier:"West Central Wireless",addr:"@sms.wcc.net"},{carrier:"XIT Communications",addr:"@sms.xit.net"}])}.call(this),function(){"use strict";var app=angular.module("sms").factory("CarrierFactory",["$http","$q","CarrierService","LocalCarriers",function($http,$q,CarrierService,localCarriers){function success(data,status,headers,config){200===data.status?cs.setCarriers(data.data):cs.getCarriers()||cs.setCarriers(localCarriers),deferred.resolve(cs.getCarriers())}function error(data,status,headers,config){cs.getCarriers()||cs.setCarriers(localCarriers),deferred.resolve(cs.getCarriers())}function getCarriers(){return cs.getCarriers()?deferred.resolve(cs.getCarriers()):$http.get("/api/carriers/countries/us").success(success).error(error),deferred.promise}var cs=CarrierService,deferred=$q.defer();return{getCarriers:getCarriers}}]);app.service("CarrierService",["$rootScope",function($rootScope){this.cachedCarriers=null,this.setCarriers=function(cr){this.cachedCarriers=cr,$rootScope.$broadcast("carrier.update")},this.getCarriers=function(){return this.cachedCarriers}}])}.call(this),function(){"use strict";function config($httpProvider){$httpProvider.interceptors.push("HttpProviderInterceptor")}angular.module("users").config(config),config.$inject=["$httpProvider"]}.call(this),function(){"use strict";angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("settings",{url:"/settings/me",templateUrl:"modules/users/views/settings/settings.client.view.html"}).state("settings.profile",{url:"/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("settings.notifications",{url:"/notifications",templateUrl:"modules/users/views/settings/edit-notifications.client.view.html"}).state("settings.password",{url:"/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("settings.accounts",{url:"/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invlaid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}])}.call(this),function(){"use strict";function AuthenticationController($scope,$state,$rootScope,$http,$location,Authentication,CarrierFactory,lodash){var _=lodash;CarrierFactory.getCarriers().then(function(data){$scope.carriers=data}),$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$scope.credentials.carrier=_.isUndefined($scope.credentials.carrier)?"":$scope.credentials.carrier.addr,$http.post("/api/users",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")})},$scope.confirmPassword=function(){var password=$scope.credentials.password||"";$scope.isPasswordError=password.trimRight()===$scope.credentials.confirmPassword.trimRight()}}angular.module("users").controller("AuthenticationController",AuthenticationController),AuthenticationController.$inject=["$scope","$state","$rootScope","$http","$location","Authentication","CarrierFactory","lodash"]}.call(this),function(){"use strict";angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(errorResponse){$scope.credentials=null,$scope.error=errorResponse.clientMessage})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(errorResponse){$scope.error=errorResponse.clientMessage})}}])}.call(this),function(){"use strict";function SettingsController($scope,$http,$state,$location,Users,Authentication,growl,$window,CarrierFactory,lodash,$validation,dialogs){function hasConnectedAdditionalSocialAccounts(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1}function isConnectedSocialAccount(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]}function removeUserSocialAccount(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response,_notifySuccess()})}function updateUserProfile(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response,_notifySuccess()})}else $scope.submitted=!0}function changeUserPassword(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null,_notifySuccess(),$window.location="/auth/signout"})}function _notifySuccess(text){text=text||"Settings Saved Successfully",growl.success(text)}function userHasPhone(){return $validation.getExpression("phone").test($scope.user.phoneNumber)}function userHasCarrier(){return!_.isUndefined($scope.user.carrier)&&!_.isEmpty($scope.user.carrier)}function alertSetPhone(){var header="Text Message",msg="In order to receive text messages, make sure your phone number and carrier are correct. To verify, go to your profile settings.<br><br> Do you want to verify?",opts={size:"sm",windowClass:"modal-btn-sm"},dlg=dialogs.confirm(header,msg,opts);dlg.result.then(function(btn){$state.go("settings.profile")})}function canText(){(userHasCarrier()!==!0||userHasPhone()!==!0)&&($scope.user.preferences.receiveTexts=!1,alertSetPhone())}var _=lodash;$scope.user=Authentication.user,$scope.authentication=Authentication,$scope.$state=$state,CarrierFactory.getCarriers().then(function(data){$scope.carriers=data}),$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=hasConnectedAdditionalSocialAccounts,$scope.changeUserPassword=changeUserPassword,$scope.isConnectedSocialAccount=isConnectedSocialAccount,$scope.removeUserSocialAccount=removeUserSocialAccount,$scope.updateUserProfile=updateUserProfile,$scope.canText=canText,$scope.user.phoneNumber=$validation.getExpression("phone").test($scope.user.phoneNumber)?$scope.user.phoneNumber:null}angular.module("users").controller("SettingsController",SettingsController),SettingsController.$inject=["$scope","$http","$state","$location","Users","Authentication","growl","$window","CarrierFactory","lodash","$validation","dialogs"]}.call(this),function(){"use strict";angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}])}.call(this),function(){"use strict";function Authorization($rootScope,$state,authentication){var service={isAuf:function(){}};return service}angular.module("users").factory("Authorization",Authorization),Authorization.$inject=["$rootScope","$state","authentication"]}.call(this),function(){"use strict";function HttpProviderInterceptor($q,$location,Authentication,growl){function responseError(rejection){switch(rejection.status){case 400:if(rejection.data){var data=rejection.data,config={};data.clientMessage.forEach(function(msg){config.title=msg,growl.warning(msg)}),data.devMessage.forEach(function(msg){config.title=msg,growl.warning(msg)})}break;case 401:Authentication.user=null,$location.path("signin");break;case 403:break;case 500:var config={title:"Sorry, We are having internal server issues :("};growl.warning(config.title)}return $q.reject(rejection)}var provider={responseError:responseError};return provider}angular.module("users").factory("HttpProviderInterceptor",HttpProviderInterceptor),HttpProviderInterceptor.$inject=["$q","$location","Authentication","growl"]}.call(this),function(){"use strict";function Search($http,$q){function getUsers(val){return $http.get("/api/users/",{params:{username:val}}).then(function(response){return angular.isObject(response.data)?response.data:[]})}function getGroups(val){return $http.get("/api/users/groups/",{params:{name:val}}).then(function(response){return angular.isObject(response.data)?response.data:[]})}var service={getUsers:getUsers,getGroups:getGroups};return service}angular.module("users").factory("Search",Search),Search.$inject=["$http","$q"]}.call(this),function(){"use strict";function Users($resource){return $resource("/api/users/:userId",{userId:"@_id"},{update:{method:"PUT"},query:{method:"GET",isArray:!0}})}angular.module("users").factory("Users",Users),Users.$inject=["$resource"]}.call(this),function(){"use strict";function UserService($http){function joinGroupAndUser(user,group){return $http.post(url,{user:user,group:group}).then(function(response){return response.data})}var service={joinGroupAndUser:joinGroupAndUser},url="/api/users/joinGroup";return service}angular.module("users").factory("UserService",UserService),UserService.$inject=["$http"]}.call(this),function(){"use strict";angular.module("validationrule",["validation"]).config(["$validationProvider",function($validationProvider){var expression={required:function(value){return!!value},positiveIntegers:/^\d+$/,email:/^.*@.*\..*[a-z]$/i,phone:/(\W|^)[(]{0,1}\d{3}[)]{0,1}[\s-]{0,1}\d{3}[\s-]{0,1}\d{4}(\W|$)/,zip:/^\d{5}(-\d{4})?$/,nospecialchars:/^[a-z0-9_\-\s]*$/i,alpha:/^[a-z]*$/i,nospace:/^[^\s]+$/,oneUpperCaseLetter:function(value){return/^(?=.*[A-Z]).+$/.test(value)},oneLowerCaseLetter:function(value){return/^(?=.*[a-z]).+$/.test(value)},oneNumber:function(value){return/^(?=.*[0-9]).+$/.test(value)},oneAlphabet:function(value){return/^(?=.*[a-z]).+$/i.test(value)},minlength:function(value,scope,element,attrs){var val=value||"";return val.length>=parseInt(attrs.ngMinlength,10)},maxlength:function(value,scope,element,attrs){var val=value||"";return val.length<=parseInt(attrs.ngMaxlength,10)?!0:!1}},defaultMsg={required:{error:"Required!!"},positiveIntegers:{error:"Please enter only positive numbers with no decimals"},email:{error:"Please enter a valid email"},phone:{error:"Please enter a valid phone number"},zip:{error:"Please enter a valid zip code"},nospecialchars:{error:"Valid characters are: A-Z, a-z, 0-9"},alpha:{error:"Valid characters are: A-Z, a-z"},nospace:{error:"Cannot contain any spaces"},oneUpperCaseLetter:{error:"Must contain at least one uppercase letter."},oneLowerCaseLetter:{error:"Must contain at least one lowercase letter"},oneNumber:{error:"Must contain at least one number"},oneAlphabet:{error:"Must contain at least one alphabet"}};$validationProvider.setErrorHTML(function(msg){return"<div class='has-error'>"+msg+"</div>"}),$validationProvider.setExpression(expression).setDefaultMsg(defaultMsg),$validationProvider.showSuccessMessage=!1,$validationProvider.showErrorMessage=!0}])}.call(this),function(){"use strict";angular.module("validationrule").directive("vr-match",[function(){return{require:"ngModel",restrict:"A",scope:{match:"="},link:function(scope,elem,attrs,ctrl){scope.$watch(function(){var modelValue=ctrl.$modelValue||ctrl.$$invalidModelValue;return ctrl.$pristine&&angular.isUndefined(modelValue)||scope.match===modelValue},function(currentValue){ctrl.$setValidity("match",currentValue)})}}}])}.call(this);
//# sourceMappingURL=application.min.js.map