"use strict";function config($locationProvider){$locationProvider.hashPrefix("!")}function run(editableOptions){editableOptions.theme="bs3"}function ready(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}function ErrorController($rootScope,_){function onRouteChange(){isErrorUnDef()||($rootScope.errors=[])}function watchError(){isErrorUnDef()||($rootScope.errors=$rootScope.error.clientMessage.concat($rootScope.error.devMessage))}function isErrorUnDef(){return _.isUndefined($rootScope.error)}function closeAlert(index){$rootScope.errors.splice(index,1)}$rootScope.$on("$stateChangeStart",onRouteChange),$rootScope.$watch("error",watchError),$rootScope.closeAlert=closeAlert}function config($httpProvider){$httpProvider.interceptors.push("HttpProviderInterceptor")}var ApplicationConfiguration=function(){var applicationModuleName="mean",applicationModuleVendorDependencies=["ngResource","ngAnimate","ui.router","ui.bootstrap","ui.utils","validation","validationrule","ngAutocomplete","ngLodash","720kb.fx","xeditable"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).run(["editableOptions",run]).config(["$locationProvider",config]),angular.element(document).ready(ready),ApplicationConfiguration.registerModule("articles"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("events"),ApplicationConfiguration.registerModule("groups"),ApplicationConfiguration.registerModule("sms"),ApplicationConfiguration.registerModule("userform"),ApplicationConfiguration.registerModule("users"),ApplicationConfiguration.registerModule("validationrule"),angular.module("articles").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Articles","articles","dropdown","/articles(/create)?"),Menus.addSubMenuItem("topbar","articles","List Articles","articles"),Menus.addSubMenuItem("topbar","articles","New Article","articles/create")}]),angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("listArticles",{url:"/articles",templateUrl:"modules/articles/views/list-articles.client.view.html"}).state("createArticle",{url:"/articles/create",templateUrl:"modules/articles/views/create-article.client.view.html"}).state("viewArticle",{url:"/articles/:articleId",templateUrl:"modules/articles/views/view-article.client.view.html"}).state("editArticle",{url:"/articles/:articleId/edit",templateUrl:"modules/articles/views/edit-article.client.view.html"})}]),angular.module("articles").controller("ArticlesController",["$scope","$stateParams","$location","Authentication","Articles",function($scope,$stateParams,$location,Authentication,Articles){$scope.authentication=Authentication,$scope.create=function(){var article=new Articles({title:this.title,content:this.content});article.$save(function(response){$location.path("articles/"+response._id),$scope.title="",$scope.content=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(article){if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1)}else $scope.article.$remove(function(){$location.path("articles")})},$scope.update=function(){var article=$scope.article;article.$update(function(){$location.path("articles/"+article._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.articles=Articles.query()},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})}}]),angular.module("articles").factory("Articles",["$resource",function($resource){return $resource("articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("AppAlertController",["$rootScope","lodash",ErrorController]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.title="SportsScheduler",$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),function(){function AppAlert($rootScope,$timeout){function add(type,msg,timeout){$rootScope.alerts.push({type:type,msg:msg,close:function(){return alertService.closeAlert(this)}}),timeout&&$timeout(function(){clear()},5e3)}function closeAlert(alert){return this.closeAlertIdx($rootScope.alerts.indexOf(alert))}function closeAlertIdx(index){return $rootScope.alerts.splice(index,1)}function clear(){$rootScope.alerts=[]}$rootScope.alerts=[];var alertService={add:add,closeAlert:closeAlert,closeAlertIdx:closeAlertIdx,clear:clear};return alertService}angular.module("core").factory("AppAlert",AppAlert)}.call(this),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("events").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Events","events","dropdown","/events(/create)?"),Menus.addSubMenuItem("topbar","events","List Events","events"),Menus.addSubMenuItem("topbar","events","New Event","events/create")}]),angular.module("events").config(["$stateProvider",function($stateProvider){$stateProvider.state("listEvents",{url:"/events",templateUrl:"modules/events/views/list-events.client.view.html"}).state("createEvent",{url:"/events/create",templateUrl:"modules/events/views/create-event.client.view.html"}).state("viewEvent",{url:"/events/:eventId",templateUrl:"modules/events/views/view-event.client.view.html"}).state("editEvent",{url:"/events/:eventId/edit",templateUrl:"modules/events/views/edit-event.client.view.html"})}]),angular.module("events").controller("EventsController",["$scope","$stateParams","$location","Authentication","Events",function($scope,$stateParams,$location,Authentication,Events){$scope.authentication=Authentication,$scope.event=$scope.event||{},$scope.event={voteEnabled:!0,minimumVotes:0},$scope.options={country:"us"},$scope.details="",$scope.today=function(){$scope.event.date=new Date},$scope.today(),$scope.clear=function(){$scope.event.date=null},$scope.disabled=function(date,mode){return"day"===mode&&(0===date.getDay()||6===date.getDay())},$scope.toggleMin=function(){$scope.minDate=$scope.minDate?null:new Date},$scope.toggleMin(),$scope.open=function($event){$event.preventDefault(),$event.stopPropagation(),$scope.opened=!0},$scope.dateOptions={formatYear:"yy",startingDay:1},$scope.formats=["dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.dateChange=function(){$scope.dateError=$scope.event.date?!1:!0};var date=new Date,plusTwoHrs=date.getHours()+2;date.setHours(plusTwoHrs),$scope.event.time=date;var now,hrsDiff,time,HRS=2,HRS_MS=60*HRS*60*1e3;$scope.timeChange=function(){now=new Date,time=now.getTime(),hrsDiff=$scope.event.time.getTime()-time,$scope.timeError=HRS_MS>hrsDiff?!0:!1},$scope.$watch("details.geometry.location",function(newVal){newVal&&($scope.event.location.lat=newVal.lat(),$scope.event.location.lng=newVal.lng())}),$scope.create=function(){if(!$scope.timeError&&!$scope.dateError){var event=new Events($scope.event);event.$save(function(response){$location.path("events/"+response.data._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.clientMessage})}},$scope.remove=function(event){if(event){event.$remove();for(var i in $scope.events)$scope.events[i]===event&&$scope.events.splice(i,1)}else $scope.event.$remove(function(){$location.path("events")})},$scope.update=function(){if(!$scope.timeError&&!$scope.dateError){var event=$scope.event;event.$update(function(){return console.log("Update "+event),event?void $location.path("events/"+event._id):void($scope.error="Error with the server")},function(errorResponse){$scope.error=errorResponse.clientMessage})}},$scope.find=function(){var events=Events.query(function(){$scope.events=events})},$scope.findOne=function(){var event=Events.get({eventId:$stateParams.eventId},function(){$scope.event=event})}}]),angular.module("events").factory("Events",["$resource",function($resource){return $resource("/api/users/groups/events/:eventId",{eventId:"@_id"},{update:{method:"PUT"},query:{method:"GET",isArray:!0}})}]),angular.module("groups").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Groups","groups","dropdown","/groups(/create)?"),Menus.addSubMenuItem("topbar","groups","List Groups","groups"),Menus.addSubMenuItem("topbar","groups","New Group","groups/create")}]),angular.module("groups").config(["$stateProvider",function($stateProvider){$stateProvider.state("listGroups",{url:"/groups",templateUrl:"modules/groups/views/list-groups.client.view.html"}).state("createGroup",{url:"/groups/create",templateUrl:"modules/groups/views/create-group.client.view.html"}).state("viewGroup",{url:"/groups/:groupId",templateUrl:"modules/groups/views/view-group.client.view.html"}).state("viewGroup.listMembers",{url:"/members",templateUrl:"modules/groups/views/view-members-group.client.view.html"}).state("viewGroup.listMembers.viewMembers",{url:"/list",templateUrl:"modules/groups/views/list-members-group.client.view.html"}).state("viewGroup.listMembers.addMembers",{url:"/add",templateUrl:"modules/groups/views/add-members-group.client.view.html"}).state("viewGroup.listEvents",{url:"/events",templateUrl:"modules/groups/views/view-events-group.client.view.html"}).state("editGroup",{url:"/groups/:groupId/edit",templateUrl:"modules/groups/views/edit-group.client.view.html"})}]),angular.module("groups").controller("GroupsController",["$scope","$state","$stateParams","$location","Authentication","Groups","Search","lodash",function($scope,$state,$stateParams,$location,Authentication,Groups,Search,_){function create(){var group=new Groups($scope.group);group.$save(function(response){redirectHome(response._id)})}function remove(){$scope.group.$remove(function(){$location.path("groups")})}function update(){$scope.group.$update(function(response){redirectHome(response._id)})}function find(){$scope.groups=Groups.query()}function findOne(){$scope.group=Groups.get({groupId:$stateParams.groupId},function(){$scope.members=$scope.group.members})}function onSelect($item,$model){var tempMembers=$scope.members;tempMembers.push($model),$scope.members=_.uniq(tempMembers,!0,"username"),console.log($scope.members)}function saveMembers(){var union=_.union($scope.group.members,$scope.members),uniq=_.uniq(union,!0,"_id");$scope.group.members=uniq,update()}function removeMember(index){$scope.members.splice(index,1)}function redirectHome(id){$location.path("groups/"+id+"/members/list")}$scope.authentication=Authentication,$scope.$state=$state,$scope.create=create,$scope.remove=remove,$scope.update=update,$scope.find=find,$scope.findOne=findOne,$scope.temp={members:[]},$scope.getMembers=Search.getUsers,$scope.onSelect=onSelect,$scope.saveMembers=saveMembers,$scope.removeMember=removeMember}]),angular.module("groups").factory("Groups",["$resource",function($resource){return $resource("/api/users/groups/:groupId",{groupId:"@_id"},{update:{method:"PUT"},query:{method:"GET",isArray:!0}})}]).factory("Search",["$http",function($http){return{getUsers:function(val){return $http.get("/api/users/",{params:{username:val}}).then(function(response){return response.data})}}}]),angular.module("sms").config(["$stateProvider",function($stateProvider){$stateProvider.state("sms",{url:"/sms",templateUrl:"modules/sms/views/sms.client.view.html",resolve:{CarrierFactory:"CarrierFactory",carriers:function(CarrierFactory){return CarrierFactory.getCarriers()}},controller:"SmsController"})}]),angular.module("sms").controller("SmsController",["$scope","$http","carriers",function($scope,$http,carriers){function getToAddr(){return $scope.smsform.phone+$scope.smsform.carrier.addr}function getText(){return $scope.smsform.msg}function sendText(){var to=getToAddr(),text=getText(),subject="Test subject";$scope.apiData={to:to,text:text,subject:subject},$scope.sentData=$scope.apiData;var promise=$http.post("/api/sms",$scope.apiData);promise.success(function(response){$scope.response=response}),promise.error(function(response){alert("error "+response)})}$scope.carriers=carriers,$scope.smsform={submit:sendText}}]),angular.module("sms").value("LocalCarriers",[{carrier:"Airfire Mobile",addr:"@sms.airfiremobile.com"},{carrier:"Alltel",addr:"@message.alltel.com"},{carrier:"Alltel (Allied Wireless)",addr:"@sms.alltelwireless.com"},{carrier:"Alaska Communications",addr:"@msg.acsalaska.com"},{carrier:"Ameritech",addr:"@paging.acswireless.com"},{carrier:"Assurance Wireless",addr:"@vmobl.com"},{carrier:"AT&T Wireless",addr:"@txt.att.net"},{carrier:"AT&T Mobility (Cingular)",addr:"@txt.att.net"},{carrier:"AT&T Enterprise Paging",addr:"@page.att.net"},{carrier:"AT&T Global Smart Messaging Suite",addr:"@sms.smartmessagingsuite.com"},{carrier:"BellSouth",addr:"@bellsouth.cl"},{carrier:"Bluegrass Cellular",addr:"@sms.bluecell.com"},{carrier:"Bluesky Communications",addr:"@psms.bluesky.as"},{carrier:"BlueSkyFrog",addr:"@blueskyfrog.com"},{carrier:"Boost Mobile",addr:"@sms.myboostmobile.com"},{carrier:"Cellcom",addr:"@cellcom.quiktxt.com"},{carrier:"Cellular South",addr:"@csouth1.com"},{carrier:"Centennial Wireless",addr:"@cwemail.com"},{carrier:"Chariton Valley Wireless",addr:"@sms.cvalley.net"},{carrier:"Chat Mobility",addr:"@mail.msgsender.com"},{carrier:"Cincinnati Bell",addr:"@gocbw.com"},{carrier:"Cingular (Postpaid)",addr:"@cingular.com"},{carrier:"Cleartalk Wireless",addr:"@sms.cleartalk.us"},{carrier:"Comcast PCS",addr:"@comcastpcs.textmsg.com"},{carrier:"Cricket",addr:"@sms.mycricket.com"},{carrier:"C Spire Wireless",addr:"@cspire1.com"},{carrier:"DTC Wireless",addr:"@sms.advantagecell.net"},{carrier:"Element Mobile",addr:"@sms.elementmobile.net"},{carrier:"Esendex",addr:"@echoemail.net"},{carrier:"General Communications Inc.",addr:"@mobile.gci.net"},{carrier:"Golden State Cellular",addr:"@gscsms.com"},{carrier:"Google Voice",addr:"@txt.voice.google.com"},{carrier:"GreatCall",addr:"@vtext.com"},{carrier:"Helio",addr:"@myhelio.com"},{carrier:"i wireless (T-Mobile)",addr:".iws@iwspcs.net"},{carrier:"i wireless (Sprint PCS)",addr:"@iwirelesshometext.com"},{carrier:"Kajeet",addr:"@mobile.kajeet.net"},{carrier:"LongLines",addr:"@text.longlines.com"},{carrier:"Metro PCS",addr:"@mymetropcs.com"},{carrier:"Nextech",addr:"@sms.nextechwireless.com"},{carrier:"Nextel Direct Connect (Sprint)",addr:"@messaging.nextel.com"},{carrier:"Page Plus Cellular",addr:"@vtext.com"},{carrier:"Pioneer Cellular",addr:"@zsend.com"},{carrier:"PSC Wireless",addr:"@sms.pscel.com"},{carrier:"Rogers Wireless",addr:"@sms.rogers.com"},{carrier:"Qwest",addr:"@qwestmp.com"},{carrier:"Simple Mobile",addr:"@smtext.com"},{carrier:"Solavei",addr:"@tmomail.net"},{carrier:"South Central Communications",addr:"@rinasms.com"},{carrier:"Southern Link",addr:"@page.southernlinc.com"},{carrier:"Sprint PCS (CDMA)",addr:"@messaging.sprintpcs.com"},{carrier:"Straight Talk",addr:"@vtext.com"},{carrier:"Syringa Wireless",addr:"@rinasms.com"},{carrier:"T-Mobile",addr:"@tmomail.net"},{carrier:"Teleflip",addr:"@teleflip.com"},{carrier:"Ting",addr:"@message.ting.com"},{carrier:"Tracfone",addr:"@mmst5.tracfone.com"},{carrier:"Telus Mobility",addr:"@msg.telus.com"},{carrier:"Unicel",addr:"@utext.com"},{carrier:"US Cellular",addr:"@email.uscc.net"},{carrier:"USA Mobility",addr:"@usamobility.net"},{carrier:"Verizon Wireless",addr:"@vtext.com"},{carrier:"Viaero",addr:"@viaerosms.com"},{carrier:"Virgin Mobile",addr:"@vmobl.com"},{carrier:"Voyager Mobile",addr:"@text.voyagermobile.com"},{carrier:"West Central Wireless",addr:"@sms.wcc.net"},{carrier:"XIT Communications",addr:"@sms.xit.net"}]);var app=angular.module("sms").factory("CarrierFactory",["$http","$q","CarrierService","LocalCarriers",function($http,$q,CarrierService,localCarriers){function success(data){200===data.status?cs.setCarriers(data.data):cs.getCarriers()||cs.setCarriers(localCarriers),deferred.resolve(cs.getCarriers())}function error(){cs.getCarriers()||cs.setCarriers(localCarriers),deferred.resolve(cs.getCarriers())}function getCarriers(){return cs.getCarriers()?deferred.resolve(cs.getCarriers()):$http.get("/api/carriers/countries/us").success(success).error(error),deferred.promise}var cs=CarrierService,deferred=$q.defer();return{getCarriers:getCarriers}}]);app.service("CarrierService",["$rootScope",function($rootScope){this.cachedCarriers=null,this.setCarriers=function(cr){this.cachedCarriers=cr,$rootScope.$broadcast("carrier.update")},this.getCarriers=function(){return this.cachedCarriers}}]),angular.module("userform").config(["$stateProvider",function($stateProvider){$stateProvider.state("userform",{url:"/form",templateUrl:"modules/userform/views/userform.client.view.html"})}]),angular.module("userform").controller("UserformController",["$scope","Userform",function($scope,Userform){function saveEntry(){Userform.save($scope.userform).$promise.then(function(data){$scope.message=data,retrieveEntries()},function(data){$scope.message=data})}function retrieveEntries(){var entries=Userform.query(function(){$scope.entries=entries})}$scope.userform={submit:function(){saveEntry()}},retrieveEntries()}]),angular.module("userform").factory("Userform",["$resource",function($resource){return $resource("/test/:userId",{userId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",config]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invlaid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication","CarrierFactory",function($scope,$http,$location,Authentication,CarrierFactory){CarrierFactory.getCarriers().then(function(data){$scope.carriers=data}),$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$scope.credentials.carrier=$scope.credentials.carrier.addr,$http.post("/api/users",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(errorResponse){$scope.error=errorResponse.clientMessage})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(errorResponse){$scope.error=errorResponse.clientMessage})},$scope.confirmPassword=function(){var password=$scope.credentials.password||"";$scope.isPasswordError=password.trimRight()===$scope.credentials.confirmPassword.trimRight()}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(errorResponse){$scope.credentials=null,$scope.error=errorResponse.clientMessage})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(errorResponse){$scope.error=errorResponse.clientMessage})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(errorResponse){$scope.error=errorResponse.clientMessage})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(errorResponse){$scope.error=errorResponse.clientMessage})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(errorResponse){$scope.error=errorResponse.clientMessage})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("HttpProviderInterceptor",["$q","$location","Authentication","$rootScope","lodash",function($q,$location,Authentication,$rootScope){return{responseError:function(rejection){switch(rejection.status){case 400:$rootScope.error=rejection.data;break;case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]),angular.module("validationrule",["validation"]).config(["$validationProvider",function($validationProvider){var expression={required:function(value){return!!value},positiveIntegers:/^\d+$/,email:/^.*@.*\..*[a-z]$/i,phone:/(\W|^)[(]{0,1}\d{3}[)]{0,1}[\s-]{0,1}\d{3}[\s-]{0,1}\d{4}(\W|$)/,zip:/^\d{5}(-\d{4})?$/,nospecialchars:/^[a-z0-9_\-\s]*$/i,alpha:/^[a-z]*$/i,nospace:/^[^\s]+$/,oneUpperCaseLetter:function(value){return/^(?=.*[A-Z]).+$/.test(value)},oneLowerCaseLetter:function(value){return/^(?=.*[a-z]).+$/.test(value)},oneNumber:function(value){return/^(?=.*[0-9]).+$/.test(value)},oneAlphabet:function(value){return/^(?=.*[a-z]).+$/i.test(value)},minlength:function(value,scope,element,attrs){var val=value||"";return val.length>=parseInt(attrs.ngMinlength,10)},maxlength:function(value,scope,element,attrs){var val=value||"";return val.length<=parseInt(attrs.ngMaxlength,10)?!0:!1}},defaultMsg={required:{error:"Required!!"},positiveIntegers:{error:"Please enter only positive numbers with no decimals"},email:{error:"Please enter a valid email"},phone:{error:"Please enter a valid phone number"},zip:{error:"Please enter a valid zip code"},nospecialchars:{error:"Valid characters are: A-Z, a-z, 0-9"},alpha:{error:"Valid characters are: A-Z, a-z"},nospace:{error:"Cannot contain any spaces"},oneUpperCaseLetter:{error:"Must contain at least one uppercase letter."},oneLowerCaseLetter:{error:"Must contain at least one lowercase letter"},oneNumber:{error:"Must contain at least one number"},oneAlphabet:{error:"Must contain at least one alphabet"}};$validationProvider.setErrorHTML(function(msg){return"<div class='has-error'>"+msg+"</div>"}),$validationProvider.setExpression(expression).setDefaultMsg(defaultMsg),$validationProvider.showSuccessMessage=!1,$validationProvider.showErrorMessage=!0}]),angular.module("validationrule").directive("vr-match",[function(){return{require:"ngModel",restrict:"A",scope:{match:"="},link:function(scope,elem,attrs,ctrl){scope.$watch(function(){var modelValue=ctrl.$modelValue||ctrl.$$invalidModelValue;return ctrl.$pristine&&angular.isUndefined(modelValue)||scope.match===modelValue},function(currentValue){ctrl.$setValidity("match",currentValue)})}}}]);
